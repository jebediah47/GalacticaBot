// <auto-generated />
using System;
using GalacticaBot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GalacticaBot.Migrations
{
    [DbContext(typeof(GalacticaDbContext))]
    partial class GalacticaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GalacticaBot.Data.BotConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BotActivity")
                        .HasColumnType("integer")
                        .HasColumnName("botActivity");

                    b.Property<string>("BotPresence")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasDefaultValue("")
                        .HasColumnName("botPresence");

                    b.Property<int>("BotStatus")
                        .HasColumnType("integer")
                        .HasColumnName("botStatus");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastUpdated")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id")
                        .HasName("pk_bot_config");

                    b.ToTable("BotConfig", null, t =>
                        {
                            t.HasCheckConstraint("ck_botconfig_single", "id = 1");
                        });
                });

            modelBuilder.Entity("GalacticaBot.Data.GuildConfigs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateJoined")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dateJoined")
                        .HasDefaultValueSql("now()");

                    b.Property<decimal>("GuildId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guildID");

                    b.Property<string>("GuildName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("guildName");

                    b.Property<DateTime>("LastUpdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastUpdated")
                        .HasDefaultValueSql("now()");

                    b.Property<decimal?>("ModLogsChannelId")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("modLogsChannelID");

                    b.Property<bool>("ModLogsIsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("modLogsIsEnabled");

                    b.Property<uint>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Id")
                        .HasName("pk_guild_configs");

                    b.HasIndex("GuildId")
                        .IsUnique()
                        .HasDatabaseName("ix_guild_configs_guild_id");

                    b.HasIndex("ModLogsChannelId")
                        .IsUnique()
                        .HasDatabaseName("ix_guild_configs_mod_logs_channel_id");

                    b.ToTable("GuildConfigs", (string)null);
                });

            modelBuilder.Entity("GalacticaBot.Data.LevelModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)")
                        .HasColumnName("id")
                        .HasDefaultValueSql("gen_random_uuid()::text");

                    b.Property<decimal>("GuildID")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("guildID");

                    b.Property<DateTime>("LastXpMsg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lastXpMsg")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("level");

                    b.Property<decimal>("UserID")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("userID");

                    b.Property<long>("Xp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L)
                        .HasColumnName("xp");

                    b.HasKey("Id")
                        .HasName("pk_level_model");

                    b.HasIndex("UserID", "GuildID")
                        .IsUnique()
                        .HasDatabaseName("ix_level_model_user_id_guild_id");

                    b.ToTable("LevelModel", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
